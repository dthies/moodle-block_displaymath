YUI.add("moodle-block_displaymath-mathjax",function(e,t){M.block_displaymath=M.block_displaymath||{},M.block_displaymath.showSource=function(){e.all(".texrender").each(function(t){e.one("body").insert('<span class="texsource" style="display: inline">\\['+t.getAttribute("alt")+"\\]</span> ",t.ancestor()),t.setStyle("display","none")})},M.block_displaymath.init=function(t){MathJax.Hub.Config({tex2jax:{inlineMath:[["$$","$$"],["\\(","\\)"],["%i","%i"]],displayMath:[["\\[$ $$","$$ $\\]"],["\\[","\\]"],["%d","%d"]]}}),MathJax.Hub.Configured(),t.displaytype/2===1&&MathJax.Hub.setRenderer("HTML-CSS"),t.displaytype/2===2&&MathJax.Hub.setRenderer("NativeMML"),t.displaytype/2===3&&MathJax.Hub.setRenderer("SVG"),MathJax.Hub.Queue(function(){e.all(".texrender").each(function(t){var n="\\("+t.getAttribute("alt")+"\\)";n=n.replace(/\\\(\$ \$\$(.*)\$\$ \$\\\)/,"\\[$1\\]"),e.one("body").insert('<span class="texsource" style="display: none">'+n+"</span> ",t.ancestor())})}),MathJax.Hub.Queue(["Typeset",MathJax.Hub]),MathJax.Hub.Queue(function(){e.all(".texrender").each(function(e){e.setStyle("display","none")}),e.all(".texsource").each(function(e){e.setStyle("display","inline")})})}},"@VERSION@",{requires:["base","node"]});
